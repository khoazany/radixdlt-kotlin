package com.radixdlt.client.core.serialization

import com.radixdlt.client.core.address.RadixUniverseConfig
import org.bouncycastle.util.encoders.Base64
import org.junit.Assert.assertEquals
import org.junit.Test

class DsonTest {
    @Test
    fun fromDsonTest() {
        val dson = Dson.instance
        val jsonElement = dson.parse(Base64.decode(""))
        val universeFromDson = RadixJson.gson.fromJson(jsonElement, RadixUniverseConfig::class.java)
        assertEquals(63799298, universeFromDson.magic.toLong())
        assertEquals(3, universeFromDson.genesis.size.toLong())
    }
}
